/**
 * The MIT License
 *
 * Copyright 2018 Jeffery Shivers.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

import { create } from "./index.jsx";
import sinon from "sinon";

describe("create", () => {
  it("without any parameters, should create a new bot element", () => {
    create();

    expect(
      document.querySelectorAll(".autogenerated-sweetbot").length
    ).to.equal(1);
    expect(document.querySelector("#autogenerated-sweetbot-0")).to.not.be.null;
    expect(document.querySelector("#autogenerated-sweetbot-1")).to.be.null;
  });

  it("with empty parameters, throw an error", () => {
    expect(create.bind(create, {})).to.throw(
      Error,
      "A bot target selector was not provided"
    );
  });

  it("with bad parameters, throws an error", () => {
    expect(create.bind(create, { botSelector: "not-in-dom" })).to.throw(
      Error,
      "Bot container could not be found in document"
    );
  });

  it("with parameters, should inject a sweetbot into the target element", () => {
    let target = document.createElement("div");
    target.id = "test";
    target.innerHTML = "some html";
    document.body.appendChild(target);

    let props = {
      botSelector: "#test"
    };

    create(props);

    expect(document.querySelector("#test").innerHTML).to.not.equal("some html");
  });
});
